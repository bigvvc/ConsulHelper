// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaocheES.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace TaocheES {
  public static class TaocheESService
  {
    static readonly string __ServiceName = "TaocheES.TaocheESService";

    static readonly Marshaller<global::TaocheES.SearchCondition> __Marshaller_SearchCondition = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TaocheES.SearchCondition.Parser.ParseFrom);
    static readonly Marshaller<global::TaocheES.SearchResult> __Marshaller_SearchResult = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TaocheES.SearchResult.Parser.ParseFrom);
    static readonly Marshaller<global::TaocheES.SearchQuestionCondition> __Marshaller_SearchQuestionCondition = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::TaocheES.SearchQuestionCondition.Parser.ParseFrom);

    static readonly Method<global::TaocheES.SearchCondition, global::TaocheES.SearchResult> __Method_SearchTaocheCar = new Method<global::TaocheES.SearchCondition, global::TaocheES.SearchResult>(
        MethodType.Unary,
        __ServiceName,
        "SearchTaocheCar",
        __Marshaller_SearchCondition,
        __Marshaller_SearchResult);

    static readonly Method<global::TaocheES.SearchCondition, global::TaocheES.SearchResult> __Method_SearchJDCar = new Method<global::TaocheES.SearchCondition, global::TaocheES.SearchResult>(
        MethodType.Unary,
        __ServiceName,
        "SearchJDCar",
        __Marshaller_SearchCondition,
        __Marshaller_SearchResult);

    static readonly Method<global::TaocheES.SearchCondition, global::TaocheES.SearchResult> __Method_SearchCPCCar = new Method<global::TaocheES.SearchCondition, global::TaocheES.SearchResult>(
        MethodType.Unary,
        __ServiceName,
        "SearchCPCCar",
        __Marshaller_SearchCondition,
        __Marshaller_SearchResult);

    static readonly Method<global::TaocheES.SearchQuestionCondition, global::TaocheES.SearchResult> __Method_SearchQuestion = new Method<global::TaocheES.SearchQuestionCondition, global::TaocheES.SearchResult>(
        MethodType.Unary,
        __ServiceName,
        "SearchQuestion",
        __Marshaller_SearchQuestionCondition,
        __Marshaller_SearchResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TaocheES.TaocheESReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TaocheESService</summary>
    public abstract class TaocheESServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::TaocheES.SearchResult> SearchTaocheCar(global::TaocheES.SearchCondition request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::TaocheES.SearchResult> SearchJDCar(global::TaocheES.SearchCondition request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::TaocheES.SearchResult> SearchCPCCar(global::TaocheES.SearchCondition request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::TaocheES.SearchResult> SearchQuestion(global::TaocheES.SearchQuestionCondition request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TaocheESService</summary>
    public class TaocheESServiceClient : ClientBase<TaocheESServiceClient>
    {
      /// <summary>Creates a new client for TaocheESService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TaocheESServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TaocheESService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TaocheESServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TaocheESServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TaocheESServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::TaocheES.SearchResult SearchTaocheCar(global::TaocheES.SearchCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchTaocheCar(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::TaocheES.SearchResult SearchTaocheCar(global::TaocheES.SearchCondition request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchTaocheCar, null, options, request);
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchTaocheCarAsync(global::TaocheES.SearchCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchTaocheCarAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchTaocheCarAsync(global::TaocheES.SearchCondition request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchTaocheCar, null, options, request);
      }
      public virtual global::TaocheES.SearchResult SearchJDCar(global::TaocheES.SearchCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchJDCar(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::TaocheES.SearchResult SearchJDCar(global::TaocheES.SearchCondition request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchJDCar, null, options, request);
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchJDCarAsync(global::TaocheES.SearchCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchJDCarAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchJDCarAsync(global::TaocheES.SearchCondition request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchJDCar, null, options, request);
      }
      public virtual global::TaocheES.SearchResult SearchCPCCar(global::TaocheES.SearchCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchCPCCar(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::TaocheES.SearchResult SearchCPCCar(global::TaocheES.SearchCondition request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchCPCCar, null, options, request);
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchCPCCarAsync(global::TaocheES.SearchCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchCPCCarAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchCPCCarAsync(global::TaocheES.SearchCondition request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchCPCCar, null, options, request);
      }
      public virtual global::TaocheES.SearchResult SearchQuestion(global::TaocheES.SearchQuestionCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchQuestion(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::TaocheES.SearchResult SearchQuestion(global::TaocheES.SearchQuestionCondition request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchQuestion, null, options, request);
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchQuestionAsync(global::TaocheES.SearchQuestionCondition request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchQuestionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::TaocheES.SearchResult> SearchQuestionAsync(global::TaocheES.SearchQuestionCondition request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchQuestion, null, options, request);
      }
      protected override TaocheESServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TaocheESServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(TaocheESServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SearchTaocheCar, serviceImpl.SearchTaocheCar)
          .AddMethod(__Method_SearchJDCar, serviceImpl.SearchJDCar)
          .AddMethod(__Method_SearchCPCCar, serviceImpl.SearchCPCCar)
          .AddMethod(__Method_SearchQuestion, serviceImpl.SearchQuestion).Build();
    }

  }
}
#endregion
